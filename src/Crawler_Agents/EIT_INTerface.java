package Crawler_Agents;



import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;

import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;

import ClassHelprs.file;

public class EIT_INTerface  {

     static String Search_Query_Model = "https://lww.com/pages/results.aspx?txtKeywords=";
   
	static String Article_title;
	static String Link_Prefix = "https://lww.com";
	static int Page_Number = 4;
	static String Article_numbers = "4";
	static String Link_Postfix = "&startPage=" + Page_Number + "&pageSize=" + Article_numbers;
	static String results;
	static String results_References;
	static int i = 0;
	
	static String search_Sentence = "energy";
      
    public EIT_INTerface() {
    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents

    public static void main(String[] arg) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
    	file f = new file();
		DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy-MM-dd HH-mm-ss");  
		LocalDateTime now = LocalDateTime.now();  
		String filename = "Result"+dtf.format(now)+".txt";
		String File_References = "References-"+filename;
		f.creat_file( filename);
		f.creat_file( File_References);
		
       
       System.out.println(Search_Query_Model+search_Sentence );   
    
       	
		  Thread thread = new Thread(){
			    public void run(){
			      System.out.println("Thread Running");
			   
			  
		try {
			
			for (int page = 0; page < Page_Number; page++) {
				 System.out.println("I = "+i+" | " );
				Link_Postfix = "&startPage=" + page + "&pageSize=" + Article_numbers;
				
				Document doc = Jsoup.connect(Search_Query_Model +search_Sentence + Link_Postfix).get();
				
				Elements articlesFullDoc;
			
				articlesFullDoc = doc.select("article");
                                
				for (Element article : articlesFullDoc) {
					
					Article_title = articlesFullDoc.text();
					results += "-----------| " + i + "  |-------------"+"\n";
					results_References+= "-----------| " + i + "  |-------------"+"\n";
	    			try {
                                    
						            
					} catch (Exception e4) {
						}
					try {
						results += "title | " + article.select("h4").text()+"\n";
                                               // System.out.println("   ******  " + results  +" *****");
					} catch (Exception e3) {
					}
					try {
						results += "Authors | " + article.select("div[id=allAuthors]").get(0).text()+"\n";
                                                results += "journale | " + article.select("span[class=journalTitleInSearch]").get(0).text()+"\n";
                                                results += "Link Access | " + article.select("a[href]").attr("href")+"\n";

                                               
					} catch (Exception e2) {
						}
					
							
			    	 Document doc_Article = Jsoup.connect(  article.select("a[href]").attr("href")).get();
                       
                                  results += "Abstract | " + doc_Article.select("div[id=article-abstract-content1]").text()+"\n";
                                  results += "Publiched in | " + doc_Article.select("span[id=ej-journal-date-volume-issue-pg]").text()+"\n";
				  results += "Type | " + doc_Article.select("div[class=ejp-r-article-subsection__text]").text()+"\n";
				  
                                    results += "Total Citations | " + doc_Article.select("div[id=views-statistics]").text()+"\n";	
                                
                                    
                                  System.out.println("\n   ******  " + results  +" *****");
					  Thread threadReferences = new Thread(){
						    public void run(){
						   
						      for (Element ref : doc_Article.select("div[class=article-references__item js-article-reference]")) {
						results_References += "References "+i+ " | "  + ref.text()+"\n";
					}
						      
						    }
					  };
					  threadReferences.start();
                                         	 

					  //-----------------------------------------------------------------------
					  
					  
					
					
			//	
				 i++;
                                }
			}
		} catch (Exception e) {
			System.out.println("============ END ERRER ==========");
		}
		
		f.Write_in_file( File_References, results_References.split("\n"));	
		results_References="";
		
	f.Write_in_file( filename, results.split("\n"));	
	results="";
                 			results_References="";
                       

                
results="";
		System.out.println("============ END  ==========");
		   
		
			    }
			  };
			  thread.start();
        
    }

}
